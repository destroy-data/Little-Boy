image: silkeh/clang:20-bookworm

variables:
  CMAKE_BUILD_DIR: "build"

cache:
  key: ${CI_COMMIT_REF_SLUG}-deps
  paths:
    - ${CMAKE_BUILD_DIR}/_deps/
  policy: pull-push

stages:
  - check

format-check:
  stage: check
  script:
    - |
      find src include -type f \( -name "*.cpp" -o -name "*.hpp" -o -name "*.h" \) -print0 | 
      xargs -0 -P $(nproc) -I{} sh -c '
        if ! clang-format -style=file --dry-run -Werror "{}"; then 
          echo "❌ {} is not properly formatted" >&2; 
          exit 1; 
        fi
      '
    - echo "✅ All files are properly formatted!"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
    - if: $CI_COMMIT_BRANCH == "master"

# TODO find newer image
#build-warnings-check:
#  stage: check
#  before_script:
#    - apt-get update && apt-get install -y ninja-build git libdrm-dev libgbm-dev libegl1-mesa-dev libc++-dev libc++abi-dev
#  script:
#    - |
#      cmake -B ${CMAKE_BUILD_DIR} -S . -GNinja \
#        -DCMAKE_CXX_COMPILER=clang++ \
#        -DCMAKE_C_COMPILER=clang \
#        -DCMAKE_CXX_FLAGS="-O0 -Wall -Wextra -Wpedantic -Werror -stdlib=libc++" \
#        -DPLATFORM=DRM
#    - cmake --build ${CMAKE_BUILD_DIR}
#    - echo "✅ Build completed with no warnings!"
#  artifacts:
#    paths:
#      - ${CMAKE_BUILD_DIR}/
#    expire_in: 3 hours
#    when: on_success
#  rules:
#    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
#    - if: $CI_COMMIT_BRANCH == "master"
